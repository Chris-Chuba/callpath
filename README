callpath.hxx, The full implementation of CallPath::isUnique()
testcallpath.cxx, an example of using callpath.hxx.

Compile: g++ -rdynamic -lbacktrace  -g callpath.cxx
These options provide meaningful symbols to the call stack.
The code still works without it but the backtraces will lack symbols
(see Makefile).

-----------------------------------------------------------------
Example:
#include <callpath.hxx>
void funcA(void)
{
    std::string  result;

    if (CallPath::isUnique(result)) {
       cout << result << endl;
       // first time caller called funcA(), subsequent calls from the same
       // location returns false, 'result' returns the call stack.
    }

-----------------------------------------------------------------
Use case:
    If 100 different functions call the same IO routine, you can add
    CallPath::isUnique() to that common IO routine and add error insertion there.
    This is equivalent to adding FIF error hooks to the 100 callers but much easier.

-----------------------------------------------------------------
callpath/c/callpath.h - This has the Standard C implementation with no C++ syntax.